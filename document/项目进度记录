界面问题

本地，局域网

功能问题

icmp


输入ip（一个IP，一段IP），IP

获得选一个

列出开放的端口

选择端口

攻击

围绕任务书，写毕业设计。
概要设计，详细设计 ，实现，测试，
开发文档

DNS，视频流，SNMP，

Net-SNMP 

先判断主机

排行榜
多视频（小视频，m3u8）
图文混排
多图

监测是否存在主机

sendARP获得局域网地址

整个流程跑通，包括输入输出，错误处理等等。

2、ARP协议（MAC地址获取）、ICMP协议（）、IP协议、UDP协议、UDP 端口扫描、UDP Flood攻击相关知识

2、相关协议介绍：ARP、ICMP协议、IP协议、UDP协议

3、UDP Flood攻击相关技术


主机扫描
MAC 地址获取
UDP 端口扫描
UDP Flood攻击

winpcap

问sock


UDP Flood攻击程序根据用户设定的参数，伪造源MAC、源IP和源端口，向指定主机发送大量的伪造的UDP报文, 对指定的主机进行攻击。


UDP 是用户数据报协议，提供面向事务的信息传送服务，用
于处理数据，不提供协调的握手机制，无法保证报文安全完整到
达，是一种无连接状态不可靠的通道传输协议，主要用来支持计
算机间进行数据传输的网络应用，如网络游戏、语音视频聊天、
下载工具等。攻击者只要伪造大量 IP 地址和小字节的 UDP 报文
或控制“肉机”针对具体的应用服务器及其端口进行发送冲击，就
会使得目标服务器一直处于繁忙状态，无法响应处理正常的 UDP
数据。

UDPFlood是日渐猖厥的流量型DoS攻击，原理也很简单。常见的情况是利用大量UDP小包冲击DNS服务器或Radius认证服务器、流媒体视频服务器。100k bps的UDPFlood经常将线路上的骨干设备例如防火墙打瘫，造成整个网段的瘫痪。由于UDP协议是一种无连接的服务，在UDPFLOOD攻击中，攻击者可发送大量伪造源IP地址的小UDP包。但是，由于UDP协议是无连接性的，所以只要开了一个UDP的端口提供相关服务的话，那么就可针对相关的服务进行攻击。

地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取物理地址的一个TCP/IP协议。主机发送信息时将包含目标IP地址的ARP请求广播到网络上的所有主机，并接收返回消息，以此确定目标的物理地址；收到返回消息后将该IP地址和物理地址存入本机ARP缓存中并保留一定时间，下次请求时直接查询ARP缓存以节约资源。地址解析协议是建立在网络中各个主机互相信任的基础上的，网络上的主机可以自主发送ARP应答消息，其他主机收到应答报文时不会检测该报文的真实性就会将其记入本机ARP缓存；由此攻击者就可以向某一主机发送伪ARP应答报文，使其发送的信息无法到达预期的主机或到达错误的主机，这就构成了一个ARP欺骗。ARP命令可用于查询本机ARP缓存中IP地址和MAC地址的对应关系、添加或删除静态对应关系等。相关协议有RARP、代理ARP。

地址解析协议是通过报文工作的。报文包括如下字段：

网络控制消息协定（英文：Internet Control Message Protocol，ICMP）是网路协议族的核心协议之一。它用于TCP/IP网络中发送控制消息，提供可能发生在通信环境中的各种问题反馈，通过这些信息，令管理者可以对所发生的问题作出诊断，然后采取适当的措施解决。
ICMP [1]依靠IP来完成它的任务，它是IP的主要部分。它与传输协议，如TCP和UDP显著不同：它一般不用于在两点间传输数据。它通常不由网络程序直接使用，除了ping和traceroute这两个特别的例子。 IPv4中的ICMP被称作ICMPv4，IPv6中的ICMP则被称作ICMPv6。
ICMP报头从IP报头的第160位开始（IP首部20字节）（除非使用了IP报头的可选部分）。


Bits	160-167	168-175	176-183	184-191
160	Type	Code	校验码（checksum）
192	ID	序号（sequence）
Type - ICMP的类型,标识生成的错误报文；
Code - 进一步划分ICMP的类型,该字段用来查找产生错误的原因.；例如，ICMP的目标不可达类型可以把这个位设为1至15等来表示不同的意思。
Checksum - 校验码部分,这个字段包含有从ICMP报头和数据部分计算得来的，用于检查错误的数据，其中此校验码字段的值视为0。
ID - 这个字段包含了ID值，在Echo Reply类型的消息中要返回这个字段。
Sequence - 这个字段包含一个序号，同样要在Echo Reply类型的消息中要返回这个字段。

用户数据包协议（英语：User Datagram Protocol，缩写为UDP），又称用户数据报文协议，是一个简单的面向数据报的传输层协议，正式规范为RFC 768。
在TCP/IP模型中，UDP为网络层以上和应用层以下提供了一个简单的接口。UDP只提供数据的不可靠传递，它一旦把应用程序发给网络层的数据发送出去，就不保留数据备份（所以UDP有时候也被认为是不可靠的数据报协议）。UDP在IP数据报的头部仅仅加入了复用和数据校验（字段）。
UDP首部字段由4个部分组成，其中两个是可选的。各16bit的来源端口和目的端口用来标记发送和接受的应用进程。因为UDP不需要应答，所以来源端口是可选的，如果来源端口不用，那么置为零。在目的端口后面是长度固定的以字节为单位的长度域，用来指定UDP数据报包括数据部分的长度，长度最小值为8byte。首部剩下地16bit是用来对首部和数据部分一起做校验和（Checksum）的，这部分是可选的，但在实际应用中一般都使用这一功能。
由于缺乏可靠性且属于非连接导向协议，UDP应用一般必须允许一定量的丢包、出错和复制粘贴。但有些应用，比如TFTP，如果需要则必须在应用层增加根本的可靠机制。但是绝大多数UDP应用都不需要可靠机制，甚至可能因为引入可靠机制而降低性能。流媒体（流技术）、即时多媒体游戏和IP电话（VoIP）一定就是典型的UDP应用。如果某个应用需要很高的可靠性，那么可以用传输控制协议（TCP协议）来代替UDP。
由于缺乏拥塞控制（congestion control），需要基于网络的机制来减少因失控和高速UDP流量负荷而导致的拥塞崩溃效应。换句话说，因为UDP发送者不能够检测拥塞，所以像使用包队列和丢弃技术的路由器这样的网络基本设备往往就成为降低UDP过大通信量的有效工具。数据报拥塞控制协议（DCCP）设计成通过在诸如流媒体类型的高速率UDP流中，增加主机拥塞控制，来减小这个潜在的问题。
典型网络上的众多使用UDP协议的关键应用一定程度上是相似的。这些应用包括域名系统（DNS）、简单网络管理协议（SNMP）、动态主机配置协议（DHCP）、路由信息协议（RIP）和某些影音流服务等等。

UDP报头包括4个字段，每个字段占用2个字节（即16个二进制位）。在IPv4中，“来源连接端口”和“校验和”是可选字段（以粉色背景标出）。在IPv6中，只有来源连接端口是可选字段。